#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Menu.h"
#include "Movie.h"
#include "time.h"

/****************************************************
    Menu:
     1. Cargar archivo.
     2. Imprimir lista.
     3. Asignar rating.
     4. Asignar genero.
     5. Filtrar por genero.
     6. Ordenar peliculas.
     7. Guardar peliculas.
     8. Salir
*****************************************************/

int main()
{
	setbuf(stdout, NULL);
	srand(time(NULL));

	char salirMenu = 'n';
	char path[50];

	int flagCargaTxt = 0;
	int flagCargaBin = 0;
	int flagGuardarTxt = 0;
	int flagGuardarBin = 0;
	int flagAsignarRating = 0;
	int flagAsignarGenero = 0;
	int flagOrdenamiento = 0;

    LinkedList* listaPeliculas = ll_newLinkedList();
    LinkedList* listaPeliculasNueva = ll_newLinkedList();

    if(listaPeliculas == NULL)
    {
    	printf("No se pudo cargar en la memoria\n\n");
    	exit(1);
    }

    do{
    	switch(menu(listaPeliculas))
		{
		case 1:
			if(flagCargaTxt == 1 || flagCargaBin == 1)
			{
				printf("\nYa se realizó la carga de datos anteriormente\n\n");
			}else if(controller_getPath(path) && controller_loadFromText(path, listaPeliculas))
			{
				flagCargaTxt = 1;
			}

			break;
		case 2:
			controller_ListMovie(listaPeliculas);

			break;
		case 3:
			if(flagCargaTxt == 0)
			{
				printf("\nNo hay peliculas en el sistema\n\n");
			}else
			{
				listaPeliculasNueva = ll_map(listaPeliculas, asignarRating);
				controller_ListMovie(listaPeliculasNueva);
				printf("Se actualizo la nueva lista con los rating cargados aleatoriamente.\n\n");
				flagAsignarRating = 1;
			}
			break;

		case 4:
			if(flagCargaTxt == 0)
			{
				printf("\nNo hay peliculas en el sistema\n\n");
			}else
			{
				listaPeliculasNueva = ll_map(listaPeliculas, asignarGenero);
				controller_ListMovie(listaPeliculasNueva);
				printf("Se actualizo la nueva lista con generos cargados aleatoriamente.\n\n");
				flagAsignarGenero = 1;
			}
			break;

		case 5:
			controller_filter(listaPeliculas);
			break;

		case 6:
			if(flagAsignarRating == 1 && flagAsignarGenero == 1)
			{
				ll_sort(listaPeliculasNueva, peliculaCompararGeneroYRating, 0);
				controller_ListMovie(listaPeliculasNueva);
				printf("La lista ahora esta ordenada por Genero y Rating (Descendente)\n\n");
				flagOrdenamiento = 1;
			}else
			{
				printf("\nPrimero asigne Rating y Generos.\n\n");
			}

			break;
		case 7:
			if(flagOrdenamiento == 0)
			{
				printf("\nPrimero haga un ordenamiento.\n\n");
			}else if(controller_getPath(path))
			{
				controller_saveAsText(path , listaPeliculasNueva);
				flagGuardarTxt = 1;
			}

			break;
		case 8:
			if(flagGuardarTxt == 1 || flagGuardarBin == 1)
			{
				confirmarSalidaMenu(&salirMenu);
			}else
			{
				printf("\nPrimero deberías guardar datos\n\n");
			}
			break;

		default:
			printf("Opción incorrecta (debe ser un número del 1 al 8) \n\n");
		}
		system("pause");

	}while(salirMenu != 's');

    eMovie_delete(listaPeliculas);
    eMovie_delete(listaPeliculasNueva);

    printf("Fin del programa\n\n");
    return 0;
}
